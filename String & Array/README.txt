<각 문제별 접근방법>

문제1.1)
 비트 와이즈 연산을 통해 모든 char를 비트를 이용해서 표현한다. (1,10,100,1000) 그리고 두 char의 &연산이 0이 아니면 두개의 문자는 중복되는 것이라고 판단. 아니면 계속 축적하면서 & 연산 진행)

문제1.2)
 inplace sorting을 하면 배열의 처음과 끝에 커서를 놓고 각각을 스왑한다. 그리고 커서가 어긋나면 끝낸다.

문제1.3)
 비트 와이즈 연산을 통해 모든 char를 비트를 이용해 표현한다. 각 문자를 이전 문자와 & 연산을 하면서 결과가 0이 아니면 두 문자가 같은 것이다. 이 때 해당 문자를 '_' 문자로 마킹하고 결과를 가지고 inplace sorting을 시작한다. 

문제1.4)
 해쉬 테이블을 이용해 하나의 문자열을 저장하고 그 안에서 다른 문자열을 찾는 것.

문제1.5)
 토큰화 해서 그 공간에 %20을 넣어주는 것

문제1.6)
 규칙을 이용해서 temp변수를 이용해 적용

문제1.8)
 하나의 문자열을 연속하여 붙인 후 나머지 문자열이 이 안에 존재하는지 확인.
 


 
